/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
// import { useLoader } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";

// let GLTFLoader;
export default function Model({ ...props }) {
  // GLTFLoader = require("three/examples/jsm/loaders/GLTFLoader").GLTFLoader;
  const group = useRef();
  const { nodes, materials } = useGLTF("/ARSceneTest.gltf");
  // const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane.geometry}
        material={materials["Material.001"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        material={materials["Material.002"]}
        position={[-1.94, 0.39, -1.98]}
        scale={0.36}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        material={materials["Material.003"]}
        position={[-1.98, 0.39, -0.75]}
        scale={0.36}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder002.geometry}
        material={materials["Material.005"]}
        position={[-2.04, 0.37, 0.58]}
        scale={0.36}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder003.geometry}
        material={materials["Material.004"]}
        position={[-2.07, 0.39, 1.93]}
        scale={0.36}
      />
      <mesh
        name="Suzanne"
        castShadow
        receiveShadow
        geometry={nodes.Suzanne.geometry}
        material={materials["Material.006"]}
        position={[0, 0.45, 0]}
        rotation={[-0.57, 0.88, 0]}
        scale={0.59}
      />
    </group>
  );
}

// useGLTF.preload("/ARSceneTest.gltf");
